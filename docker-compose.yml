version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: cata-dtc:latest
    container_name: cata-dtc-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8080}:8080"
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_HOST=${APP_HOST:-0.0.0.0}
      - APP_PORT=8080
      - APP_NAME=${APP_NAME:-cata-dtc}
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-pokemondb}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=${REDIS_DB:-0}
      - POKEMON_API_URL=${POKEMON_API_URL:-https://pokeapi.co/api/v2}
      - POKEMON_API_TIMEOUT=${POKEMON_API_TIMEOUT:-30s}
      - POKEMON_API_MAX_RETRIES=${POKEMON_API_MAX_RETRIES:-3}
      - POKEMON_CACHE_TTL=${POKEMON_CACHE_TTL:-300s}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pokemon-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mysql:
    image: mysql:8.0
    container_name: cata-dtc-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-rootpassword}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-pokemondb}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - pokemon-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-rootpassword}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:7-alpine
    container_name: cata-dtc-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - pokemon-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: redis-server --appendonly yes ${REDIS_PASSWORD:+--requirepass $REDIS_PASSWORD}

  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: cata-dtc-uptime
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - uptime_data:/app/data
    networks:
      - pokemon-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  uptime_data:
    driver: local

networks:
  pokemon-network:
    driver: bridge